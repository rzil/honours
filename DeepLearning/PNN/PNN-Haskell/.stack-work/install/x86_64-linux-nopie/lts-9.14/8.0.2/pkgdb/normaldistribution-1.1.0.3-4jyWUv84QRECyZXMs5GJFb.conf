name: normaldistribution
version: 1.1.0.3
id: normaldistribution-1.1.0.3-4jyWUv84QRECyZXMs5GJFb
key: normaldistribution-1.1.0.3-4jyWUv84QRECyZXMs5GJFb
license: BSD3
copyright: Bjorn Buckwalter 2011
maintainer: bjorn.buckwalter@gmail.com
stability: Stable
homepage: https://github.com/bjornbm/normaldistribution
synopsis: Minimum fuss normally distributed random values.
description:
    This purpose of this library is to have a simple API and no
    dependencies beyond Haskell 98 in order to let you produce
    normally distributed random values with a minimum of fuss. This
    library does /not/ attempt to be blazingly fast nor to pass
    stringent tests of randomness. It attempts to be very easy to
    install and use while being \"good enough\" for many applications
    (simulations, games, etc.). The API builds upon and is largely
    analogous to that of the Haskell 98 @Random@ module (more
    recently @System.Random@).
    .
    Pure:
    .
    > (sample,g) = normal  myRandomGen  -- using a Random.RandomGen
    > samples    = normals myRandomGen  -- infinite list
    > samples2   = mkNormals 10831452   -- infinite list using a seed
    .
    In the IO monad:
    .
    > sample    <- normalIO
    > samples   <- normalsIO  -- infinite list
    .
    With custom mean and standard deviation:
    .
    > (sample,g) = normal'    (mean,sigma) myRandomGen
    > samples    = normals'   (mean,sigma) myRandomGen
    > samples2   = mkNormals' (mean,sigma) 10831452
    .
    > sample    <- normalIO'  (mean,sigma)
    > samples   <- normalsIO' (mean,sigma)
    .
    Internally the library uses the Box-Muller method to generate
    normally distributed values from uniformly distributed random values.
    If more than one sample is needed taking samples off an infinite
    list (created by e.g. 'normals') will be roughly twice as efficient
    as repeatedly generating individual samples with e.g. 'normal'.
category: Math, Statistics
author: Bjorn Buckwalter
exposed: True
exposed-modules:
    Data.Random.Normal
abi: 781f4fe4d0f1f610a9194bd4540c4825
trusted: False
import-dirs: /home/ruben/Documents/PNN-Haskell/.stack-work/install/x86_64-linux-nopie/lts-9.14/8.0.2/lib/x86_64-linux-ghc-8.0.2/normaldistribution-1.1.0.3-4jyWUv84QRECyZXMs5GJFb
library-dirs: /home/ruben/Documents/PNN-Haskell/.stack-work/install/x86_64-linux-nopie/lts-9.14/8.0.2/lib/x86_64-linux-ghc-8.0.2/normaldistribution-1.1.0.3-4jyWUv84QRECyZXMs5GJFb
dynamic-library-dirs: /home/ruben/Documents/PNN-Haskell/.stack-work/install/x86_64-linux-nopie/lts-9.14/8.0.2/lib/x86_64-linux-ghc-8.0.2
data-dir: /home/ruben/Documents/PNN-Haskell/.stack-work/install/x86_64-linux-nopie/lts-9.14/8.0.2/share/x86_64-linux-ghc-8.0.2/normaldistribution-1.1.0.3
hs-libraries: HSnormaldistribution-1.1.0.3-4jyWUv84QRECyZXMs5GJFb
depends:
    base-4.9.1.0 random-1.1-9tceXaeYIMZ4JrKq20Egog
haddock-interfaces: /home/ruben/Documents/PNN-Haskell/.stack-work/install/x86_64-linux-nopie/lts-9.14/8.0.2/doc/normaldistribution-1.1.0.3/normaldistribution.haddock
haddock-html: /home/ruben/Documents/PNN-Haskell/.stack-work/install/x86_64-linux-nopie/lts-9.14/8.0.2/doc/normaldistribution-1.1.0.3
